<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="http://0.0.0.0:4000/webdevtips/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/webdevtips/" rel="alternate" type="text/html" /><updated>2023-06-10T12:34:12+03:00</updated><id>http://0.0.0.0:4000/webdevtips/feed.xml</id><title type="html">Web Dev Tips</title><subtitle>База знаний по фронтенду, веб-разработке и настройке пк</subtitle><entry><title type="html">Screen Readers: where to download</title><link href="http://0.0.0.0:4000/webdevtips/screen-readers.html" rel="alternate" type="text/html" title="Screen Readers: where to download" /><published>2023-06-09T21:40:00+03:00</published><updated>2023-06-09T21:40:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/screen-readers</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/screen-readers.html"><![CDATA[The best answer is to test in real screen readers, ideally by getting real users as they know how to use these tools. Consider contacting your local blind association and see if they offer testing services.
Screen Readers

Each platform has a screen reader, most are built in. Windows has the most variety.
For Windows

* [Use Narrator](https://support.microsoft.com/en-us/help/17173/windows-10-hear-text-read-aloud) (it is built in, though not very good right now it is getting much better). Use it with Edge.
* [Download the free NVDA](https://www.nvaccess.org/download/) screen reader (but please donate to support it). Use it with Firefox
* [Download JAWS](https://support.freedomscientific.com/Downloads/JAWS) and use it in 40 minute increments for free. Use it with IE11.

For macOS

* [Use VoiceOver](https://support.apple.com/ru-ru/guide/voiceover/welcome/) (it is built in). Use it with Safari. [old link from source, you can change versions in url](https://help.apple.com/voiceover/info/guide/10.12/)

For iOS

* [Use VoiceOver](https://www.apple.com/accessibility/vision/) (it is built in). Use it with Safari.

For Android

* [Use TalkBack](https://support.google.com/accessibility/android/answer/6283677?hl=en). Use it with Firefox.

For Ubuntu

* [Use Orca](https://help.gnome.org/users/orca/stable/).

For ChromeOS

* [Use ChromeVox](https://support.google.com/chromebook/answer/7031755) (but only use ChromeVox in this scenario, not as a plug-in for Chrome on Windows or macOS).

## Resources

These are handy to get started with testing on your own. Keyboard shortcuts are necessary to use a screen reader well, beyond just hitting the Tab key over and over and over.

* [Basic screen reader commands for accessibility testing](https://www.paciellogroup.com/blog/2015/01/basic-screen-reader-commands-for-accessibility-testing/)

* [Screen readers and web browsers – what’s the best pairing for testing?](https://www.digitala11y.com/screen-readers-browsers-which-is-the-best-combination-for-accessibility-testing/)

## Services

* [Assistivlabs](https://assistivlabs.com/assistive-tech/screen-readers) - This is like Browserstack for screen readers and other ATs

Links are updated]]></content><author><name></name></author><category term="accessibility" /><summary type="html"><![CDATA[The best answer is to test in real screen readers, ideally by getting real users as they know how to use these tools. Consider contacting your local blind association and see if they offer testing services. Screen Readers]]></summary></entry><entry><title type="html">Переместить изменения в новую git ветку</title><link href="http://0.0.0.0:4000/webdevtips/git-move-changes-to-branch.html" rel="alternate" type="text/html" title="Переместить изменения в новую git ветку" /><published>2023-06-01T12:08:00+03:00</published><updated>2023-06-01T12:08:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/git-move-changes-to-branch</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/git-move-changes-to-branch.html"><![CDATA[Бывает, что вы сделали изменения и поняли, что они слишком большие для главной/активной ветки, требуют большей работы, чем вы думали и т.д. Вы можете перенести все изменения из working tree, которые вы еще не закоммитили в новую ветку.

```
git switch -c new-branch-name
```
До появления команды switch в 2.23 использовали `git checkout -b new-branch-name`.

Далее просто коммитите изменения уже в новую ветку. После чего можно вернуться в изначальную. 

Этот метод подходит, когда вы поняли, что начали делать целую новую фичу, которую планируете реализовать потом (дойдут ли до этого руки уже другой вопрос:). Если же вы просто хотите временно отложить изменения, то используйте [git stash](https://www.atlassian.com/ru/git/tutorials/saving-changes/git-stash).]]></content><author><name></name></author><category term="git" /><summary type="html"><![CDATA[Бывает, что вы сделали изменения и поняли, что они слишком большие для главной/активной ветки, требуют большей работы, чем вы думали и т.д. Вы можете перенести все изменения из working tree, которые вы еще не закоммитили в новую ветку.]]></summary></entry><entry><title type="html">Контраст текста в VS Code Powershell</title><link href="http://0.0.0.0:4000/webdevtips/powershell-vs-code-contrast.html" rel="alternate" type="text/html" title="Контраст текста в VS Code Powershell" /><published>2023-05-31T12:23:00+03:00</published><updated>2023-05-31T12:23:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/powershell-vs-code-contrast</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/powershell-vs-code-contrast.html"><![CDATA[Если в VS Code используете powershell и у вас слишком низкий контраст текста.

Найдите в настройках `Terminal > Minimum Contrast Ratio` и поставьте больше. Например 7.

Или:
```
"terminal.integrated.minimumContrastRatio": 7
```]]></content><author><name></name></author><category term="powershell" /><category term="vs code" /><category term="contrast" /><summary type="html"><![CDATA[Если в VS Code используете powershell и у вас слишком низкий контраст текста.]]></summary></entry><entry><title type="html">Local w3c html/css validator</title><link href="http://0.0.0.0:4000/webdevtips/local-validator.html" rel="alternate" type="text/html" title="Local w3c html/css validator" /><published>2023-05-31T12:11:00+03:00</published><updated>2023-05-31T12:11:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/local-validator</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/local-validator.html"><![CDATA[You can run [Nu Validator](https://validator.w3.org/nu/) locally.

1. Скачайте [latest](https://github.com/validator/validator/releases/tag/latest) release. File `vnu.windows.zip` for windows

2. Запустите команду в терминале `путь_к_папке/vnu-runtime-image/bin/java nu.validator.servlet.Main 8888`

3. Сайт будет доступен по адресу http://localhost:8888/

Другие варианты запуска можно [посмотреть в доках](https://validator.github.io/validator/), например как npm пакет]]></content><author><name></name></author><category term="validation" /><category term="html" /><category term="css" /><summary type="html"><![CDATA[You can run Nu Validator locally.]]></summary></entry><entry><title type="html">Highlight Matching Tag в VS Code</title><link href="http://0.0.0.0:4000/webdevtips/highlight-matching-tag.html" rel="alternate" type="text/html" title="Highlight Matching Tag в VS Code" /><published>2023-05-29T14:18:00+03:00</published><updated>2023-05-29T14:18:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/highlight-matching-tag</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/highlight-matching-tag.html"><![CDATA[Кто тоже использует расширение Highlight Matching Tag в VS Code и хочет сделать подчеркивание и отметки справа разными цветами ловите настройки:
```
"highlight-matching-tag.styles": {
        "opening": {
            "name": {
                "custom": {
                    "dark": {
                        "overviewRulerColor": "yellow"
                    },
                },
                "underline": "#839496",
            }
        }
    },
```
это для темной темы. Для светлой ставьте "light"]]></content><author><name></name></author><category term="vs code" /><summary type="html"><![CDATA[Кто тоже использует расширение Highlight Matching Tag в VS Code и хочет сделать подчеркивание и отметки справа разными цветами ловите настройки: "highlight-matching-tag.styles": { "opening": { "name": { "custom": { "dark": { "overviewRulerColor": "yellow" }, }, "underline": "#839496", } } }, это для темной темы. Для светлой ставьте “light”]]></summary></entry><entry><title type="html">Firefox игнорирует цветовой профиль монитора</title><link href="http://0.0.0.0:4000/webdevtips/firefox-color-management.html" rel="alternate" type="text/html" title="Firefox игнорирует цветовой профиль монитора" /><published>2023-05-29T14:10:00+03:00</published><updated>2023-05-29T14:10:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/firefox-color-management</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/firefox-color-management.html"><![CDATA[В Firefox не работает color management, то есть он игнорирует цветовой профиль монитора srgb и цвета искажены.

Убедитесь, что в about:config выставлено:
```
gfx.color_management.enablev4 - true	
gfx.color_management.force_srgb - true	
gfx.color_management.mode - 1	
gfx.color_management.native_srgb - true
```

[Картинка для проверки](http://www.lagom.nl/lcd-test/gradient.php#gradient-h.png). Градиент должен быть плавным (сравните с Хромом, может быть дело и в вашем мониторе, софте и т.д).]]></content><author><name></name></author><category term="firefox" /><summary type="html"><![CDATA[В Firefox не работает color management, то есть он игнорирует цветовой профиль монитора srgb и цвета искажены.]]></summary></entry><entry><title type="html">Как детектить выбор темной/светлой темы посетителя</title><link href="http://0.0.0.0:4000/webdevtips/dark-theme-detect.html" rel="alternate" type="text/html" title="Как детектить выбор темной/светлой темы посетителя" /><published>2023-05-29T13:50:00+03:00</published><updated>2023-05-29T13:50:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/dark-theme-detect</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/dark-theme-detect.html"><![CDATA[На входе
```
if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
    // dark mode
}
```

В реальном времени
```
window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
    const newColorScheme = event.matches ? "dark" : "light";
});
```

Я использую этот метод в своей [подборке ссылок](https://vallek.github.io/web-links/index.html). На момент написания это выглядит так:

В CSS я просто добавил класс dark, который динамически миксуется к классу page, переписывая цвета специфичностью (два класса). Не по БЭМу, но как часто советуют сначала делал, чтобы работало) Потом может перепишу под БЭМ.
```
.dark.page {background-color:#002B36;} 
.dark header {color:#c3d5d9;} 
и так далее
``` 
JS:
```
const page = document.querySelector('.page');
// Theme switch buttons
const lightThemeLink = document.querySelector('.themes__link_light');
const darkThemeLink = document.querySelector('.themes__link_dark');

// Check if user set dark theme before
if (localStorage.getItem('themeIs') == 'Dark') {
	page.classList.add('dark');
}

// Check if user prefers dark theme
if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
	page.classList.add('dark');
}

// Check theme preference switch real time
window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
	const newColorScheme = event.matches ? 'dark' : 'light';
	if (newColorScheme == 'dark') {
		page.classList.add('dark');
	}
	if (newColorScheme == 'light') {
		page.classList.remove('dark');
	} 
});

// Turn dark theme on
darkThemeLink.addEventListener('click', setDark);
function setDark(el) {
	el.preventDefault();
	page.classList.add('dark');
	localStorage.setItem('themeIs', 'Dark');
}

// Turn light theme on
lightThemeLink.addEventListener('click', setLight);
function setLight(el) {
	el.preventDefault();
	page.classList.remove('dark');
		localStorage.setItem('themeIs', 'Light');
}
```

Это, кажется, покрывает все кейсы.

В CSS есть медиа-запрос prefers-color-scheme, но у него гораздо *у*же поддержка и без JS все равно не обойтись (интерактивное переключение), так что не вижу смысла его использовать.]]></content><author><name></name></author><category term="css" /><category term="dark theme" /><category term="javascript" /><category term="accessibility" /><summary type="html"><![CDATA[На входе if (window.matchMedia &amp;&amp; window.matchMedia('(prefers-color-scheme: dark)').matches) { // dark mode }]]></summary></entry><entry><title type="html">Inline svg favicon</title><link href="http://0.0.0.0:4000/webdevtips/inline-svg-favicon.html" rel="alternate" type="text/html" title="Inline svg favicon" /><published>2023-05-29T12:02:00+03:00</published><updated>2023-05-29T12:02:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/inline-svg-favicon</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/inline-svg-favicon.html"><![CDATA[Код включает в себя escape символы, чтобы не ругался валидатор.
```
<link rel="icon" 
href="data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20100%20100%22%20%3E%3Ctext%20y=%22.9em%22%20font-size=%2290%22%20%3E✊%3C/text%20%3E%3C/svg%20%3E">

```
Подробности истории у меня [в блоге](https://vallek.github.io/webval-blog/2022/06/02/fix-svg-favicon-error.html).]]></content><author><name></name></author><category term="svg" /><category term="favicon" /><summary type="html"><![CDATA[Код включает в себя escape символы, чтобы не ругался валидатор. ```]]></summary></entry><entry><title type="html">Мои горячие клавиши для VS Code</title><link href="http://0.0.0.0:4000/webdevtips/vs-code-shortcuts.html" rel="alternate" type="text/html" title="Мои горячие клавиши для VS Code" /><published>2023-05-29T11:42:00+03:00</published><updated>2023-05-29T11:42:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/vs-code-shortcuts</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/vs-code-shortcuts.html"><![CDATA[Набор мои сочетаний в vs code, которые позволяют экономить время и делать работу чуть проще. Вы можете добавить их в keybindings.json или просто в интерфейс горячих клавиш.

Закомитить и все файлы одного репозитория или те, которые в stage. И сделать pull/push.

```
{
	"key": "ctrl+alt+c",
	"command": "git.commit"
},
{
	"key": "ctrl+alt+g",
	"command": "git.sync"
},
```
Выделить диапазон с помомощью emmet. Например текст внутри html тегов.
```
{
	"key": "ctrl+shift+a",
	"command": "editor.emmet.action.balanceOut"
},
```
Выделить все совпадения (если отключено автоматом при выделении)
```
{
  "key": "ctrl+shift+l",
  "command": "editor.action.selectHighlights",
  "when": "editorFocus"
}
```]]></content><author><name></name></author><category term="vs code" /><category term="shortcuts" /><category term="git" /><category term="emmet" /><summary type="html"><![CDATA[Набор мои сочетаний в vs code, которые позволяют экономить время и делать работу чуть проще. Вы можете добавить их в keybindings.json или просто в интерфейс горячих клавиш.]]></summary></entry><entry><title type="html">Посты в Jekyll без даты в имени файла</title><link href="http://0.0.0.0:4000/webdevtips/jekyll-no-date.html" rel="alternate" type="text/html" title="Посты в Jekyll без даты в имени файла" /><published>2023-05-29T11:42:00+03:00</published><updated>2023-05-29T11:42:00+03:00</updated><id>http://0.0.0.0:4000/webdevtips/jekyll-no-date</id><content type="html" xml:base="http://0.0.0.0:4000/webdevtips/jekyll-no-date.html"><![CDATA[Создайте _plugins/no_date.rb:
```
class Jekyll::PostReader
  def read_posts(dir)
    read_publishable(dir, "_posts", /.*\.md$/)
  end
end
```
Перезапустите сборку.

Обратите внимание, что в моей версии другой regexp, потому что у markdown файлов расширение md. 

Проверено прямо вот на этом сайте) Но на всякий случай все файлы кроме этого будут названы с датами.]]></content><author><name></name></author><category term="jekyll" /><summary type="html"><![CDATA[Создайте _plugins/no_date.rb: class Jekyll::PostReader def read_posts(dir) read_publishable(dir, "_posts", /.*\.md$/) end end Перезапустите сборку.]]></summary></entry></feed>