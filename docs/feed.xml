<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://vallek.github.io/webdevtips/feed.xml" rel="self" type="application/atom+xml" /><link href="https://vallek.github.io/webdevtips/" rel="alternate" type="text/html" /><updated>2024-08-08T22:07:06+03:00</updated><id>https://vallek.github.io/webdevtips/feed.xml</id><title type="html">Web Dev Tips</title><subtitle>База знаний по фронтенду, веб-разработке и настройке пк</subtitle><entry xml:lang="en"><title type="html">What’s the difference between inherit, initial, unset and revert?</title><link href="https://vallek.github.io/webdevtips/en/initial-inherit" rel="alternate" type="text/html" title="What’s the difference between inherit, initial, unset and revert?" /><published>2024-08-08T03:00:00+03:00</published><updated>2024-08-08T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/initial-inherit</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/initial-inherit"><![CDATA[<p>inherit - property value is inherited from parent node (html element)</p>

<p>initial - property value comes from css specifications (w3c)</p>

<p>unset - property value is inherited from parent node if possible. If not will come from css specifications.</p>

<p>revert - property value comes from default browser styles (user agent stylesheet)</p>

<p><img src="../img/inherit.jpg" alt="" /></p>]]></content><author><name></name></author><category term="css" /><summary type="html"><![CDATA[inherit - property value is inherited from parent node (html element)]]></summary></entry><entry xml:lang="ru"><title type="html">Чем отличаются inherit, initial, unset и revert?</title><link href="https://vallek.github.io/webdevtips/ru/initial-inherit" rel="alternate" type="text/html" title="Чем отличаются inherit, initial, unset и revert?" /><published>2024-08-08T03:00:00+03:00</published><updated>2024-08-08T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/initial-inherit</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/initial-inherit"><![CDATA[<p>inherit - значение свойства наследуется от родителя</p>

<p>initial - откатывает к значению <strong>по спецификациям</strong> (w3c)</p>

<p>unset - если может наследоваться, то будет. А если нет, то откатится к значению по спецификациям.</p>

<p>revert - откатывает к значению <strong>в браузерных стилях</strong> по умолчанию (user agent stylesheet)</p>

<p><img src="../img/inherit.jpg" alt="" /></p>

<p>Подробности <a href="https://youtu.be/Ne_ls6OzRF0?feature=shared">в моем видео</a> на тему.</p>]]></content><author><name></name></author><category term="css" /><summary type="html"><![CDATA[inherit - значение свойства наследуется от родителя]]></summary></entry><entry xml:lang="en"><title type="html">Windows Terminal in quake mode on start up</title><link href="https://vallek.github.io/webdevtips/en/windows-terminal-quake-copy" rel="alternate" type="text/html" title="Windows Terminal in quake mode on start up" /><published>2024-02-16T03:00:00+03:00</published><updated>2024-02-16T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/windows-terminal-quake copy</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/windows-terminal-quake-copy"><![CDATA[<p>Windows Terminal can work in quake mode. The mode comes from Quake video game</p>

<p>In this mode console slides down from top of the screen. It’s pretty handy if you use terminal globally.</p>

<p>To start wt in quake mode add <code class="language-plaintext highlighter-rouge">wt.exe -w _quake</code> to desktop shortcut properties. With no quotation marks:</p>

<p><img src="../img/wt-quake-2.png" alt="" /></p>

<p>However if you want wt to autostart at system start up it will just open standard window. To start it in wake mode and minimized create special shortcut like this:</p>

<ol>
  <li>win + R</li>
  <li>Type <code class="language-plaintext highlighter-rouge">shell:startup</code>. It will open Startup folder</li>
  <li>right click &gt; create shortcut</li>
  <li>wt.exe -w _quake (or %LOCALAPPDATA%\Microsoft\WindowsApps\wt.exe -w _quake if it’s not working)</li>
  <li>Call it what you want</li>
  <li>Choose minimized in windows input</li>
</ol>

<p>To hide wt tab bar:</p>

<p><img src="../img/wt-quake-3.png" alt="" /></p>

<p>Tested on Windows 10</p>]]></content><author><name></name></author><category term="windows terminal" /><category term="quake" /><category term="windows" /><summary type="html"><![CDATA[Windows Terminal can work in quake mode. The mode comes from Quake video game]]></summary></entry><entry xml:lang="ru"><title type="html">Windows Terminal в режиме quake с автозапуском</title><link href="https://vallek.github.io/webdevtips/ru/windows-terminal-quake" rel="alternate" type="text/html" title="Windows Terminal в режиме quake с автозапуском" /><published>2024-02-16T03:00:00+03:00</published><updated>2024-02-16T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/windows-terminal-quake</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/windows-terminal-quake"><![CDATA[<p>Windows Terminal можно запустить в режиме quake. Режим и его название пошли от, не поверите, игры Quake (а вовсе не то, что думает автопереводчик MS лол).</p>

<p><img src="../img/wt-quake.png" alt="" /></p>

<p>В этом режиме консоль выезжает сверху. Довольно удобно, если например пользуетесь терминалом вне vs code для разных глобальных задач.</p>

<p>Чтобы запускать wt в кваковском режиме, зайдите в свойства ярлыка и добавьте в после Объект после <code class="language-plaintext highlighter-rouge">wt.exe -w _quake</code>. Без кавычек, вот так:</p>

<p><img src="../img/wt-quake-2.png" alt="" /></p>

<p>Но если при этом включить автозапуск wt при старте системы, то он откроет обычно окно. Чтобы он загружался сразу в кваку и при этом был свернут, нужно создать особый ярлык следующим образом:</p>

<ol>
  <li>win + R</li>
  <li>Введите <code class="language-plaintext highlighter-rouge">shell:startup</code>, откроется папка автозагрузки</li>
  <li>ПКМ &gt; создать ярлык</li>
  <li>wt.exe -w _quake (или %LOCALAPPDATA%\Microsoft\WindowsApps\wt.exe -w _quake если не работает)</li>
  <li>Назовите, как хотите</li>
  <li>Выберете в поле Окно “Свернутое в значок”</li>
</ol>

<p>А чтобы скрыть верхнюю панель с вкладками нужно включить в настройках wt режим фокуса:</p>

<p><img src="../img/wt-quake-3.png" alt="" /></p>

<p>Проверено на Windows 10</p>]]></content><author><name></name></author><category term="windows terminal" /><category term="quake" /><category term="windows" /><summary type="html"><![CDATA[Windows Terminal можно запустить в режиме quake. Режим и его название пошли от, не поверите, игры Quake (а вовсе не то, что думает автопереводчик MS лол).]]></summary></entry><entry xml:lang="ru"><title type="html">Embeded Youtube Lazy Loading по клику</title><link href="https://vallek.github.io/webdevtips/ru/youtube-lazy-load" rel="alternate" type="text/html" title="Embeded Youtube Lazy Loading по клику" /><published>2024-02-05T03:00:00+03:00</published><updated>2024-02-05T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/youtube-lazy-load</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/youtube-lazy-load"><![CDATA[<p>Существует множество способов ленивой загрузки ютьюб видео по клику. В основном все они используют сторонние JS-библиотеки, либо, как минимум, какой-то JS код.</p>

<p>Но существует способ создать загрузку айфрейма по клику только силами html)</p>

<p>Выглядит это так:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">class=</span><span class="s">"video__last-video"</span> <span class="na">width=</span><span class="s">"350"</span> <span class="na">height=</span><span class="s">"250"</span> <span class="na">src=</span><span class="s">"https://www.youtube.com/embed/Ne_ls6OzRF0"</span> <span class="na">title=</span><span class="s">"Последний видосик на канале"</span> <span class="na">allow=</span><span class="s">"accelerometer; encrypted-media; gyroscope; picture-in-picture"</span> <span class="na">allowfullscreen</span> <span class="na">srcdoc=</span><span class="s">"&lt;title&gt;Последний видосик на канале&lt;/title&gt;&lt;style&gt;*{padding:0;margin:0;overflow:hidden;}html,body{height:100%}img,span{position:absolute;width:100%;top:0;bottom:0;margin:auto}span{height:1.5em;text-align:center;font:48px/1.5 sans-serif;color:white;text-shadow:0 0 0.5em black}a:focus-visible span{outline: 3px dashed rgb(255, 19, 255);outline-offset: -5px;}&lt;/style&gt;&lt;a href='https://www.youtube.com/embed/Ne_ls6OzRF0?autoplay=1'&gt;&lt;img src='https://i.ytimg.com/vi/Ne_ls6OzRF0/sddefault.jpg' alt=''&gt;&lt;span&gt;▶&lt;/span&gt;&lt;/a&gt;"</span><span class="nt">&gt;&lt;/iframe&gt;</span>
</code></pre></div></div>

<p>Суть в использовании атрибута <code class="language-plaintext highlighter-rouge">srcdoc</code>, который позволяет прописать HTML содержимое, переписывая то, что в <code class="language-plaintext highlighter-rouge">src</code>. При этом если туда поместить ссылку с изначальным адресом, то по клику в iframe загрузиться нужное видео.</p>

<p>Вы также можете стилизовать lazy load заглушку с помощью элемента style. Кнопка play задается простым символом стрелки в html коде.</p>

<p>Такой вот сделай сам lazy load. Этот способ вряд ли подойдет там, где нужно регулярно менять отображаемое видео или если их нужно вставлять часто в разных местах. Но для постоянного видео на статичной странице вполне может подойти, если вы не хотите подключать лишний JS.</p>

<p>Я использовал его на своем портфолио, но отказался от lazy load, когда начал чаще вести канал, как раз из-за необходимости постоянно <a href="/webdevtips/ru/youtube-last-video">менять видео на последнее</a>.</p>

<p><a href="https://github.com/paulirish/lite-youtube-embed">lite-youtube-embed</a> - более продвинутый способ с использованием custom elements от одного из разработчиков Хрома. Также не позволяет использовать плейлист.</p>

<p>Я нашел несколько вариантов для плейлиста в сети, но они либо не рабочие, либо не то, что мне нужно. Если найду способ сделать lazy load для последнего видео, обновлю эту заметку. Или можете написать в комментах, если знаете сами)</p>]]></content><author><name></name></author><category term="youtube" /><category term="lazy load" /><category term="iframe" /><category term="html" /><summary type="html"><![CDATA[Существует множество способов ленивой загрузки ютьюб видео по клику. В основном все они используют сторонние JS-библиотеки, либо, как минимум, какой-то JS код.]]></summary></entry><entry xml:lang="ru"><title type="html">Как вставить на страницу последнее видео с youtube канала без API</title><link href="https://vallek.github.io/webdevtips/ru/youtube-last-video" rel="alternate" type="text/html" title="Как вставить на страницу последнее видео с youtube канала без API" /><published>2024-02-05T03:00:00+03:00</published><updated>2024-02-05T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/youtube-last-video</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/youtube-last-video"><![CDATA[<p><strong>ВНИМАНИЕ upd от 21.02.2024</strong>: способ перестал работать в Хроме начиная с версии 121-122 возможно из-за изменений в политике куки. Как вариант вы можете создать плейлист со всеми видео вручную и использовать его. При этом каждый раз нужно будет добавлять в него новое видео.</p>

<p>Чтобы вставить на страницу iframe, который всегда будет показывать последнее видео с ютьюб канала без API:</p>

<ol>
  <li>Узнайте свой код канала. Для этого можно зайти на ютьюб (не студию, а просто) &gt; нажать на аватарку в углу &gt; Настройки &gt; Расширенные настройки. И там будет Идентификатор канала. Кроме того это часть url адреса, которую можно увидеть, если вы не меняли адрес канала на уникальный или в студии в Настройках канала.</li>
  <li>Первая буква будет U, а вторая какая-то другая. Нужно <strong>поменять</strong> вторую на U. То есть в начале будет UU. Например было <code class="language-plaintext highlighter-rouge">UCzS4sE_0ltfSz6qx_FUCTdA</code>, а станет <code class="language-plaintext highlighter-rouge">UUzS4sE_0ltfSz6qx_FUCTdA</code>.</li>
  <li>В значении атрибута src укажите <code class="language-plaintext highlighter-rouge">https://www.youtube.com/embed?listType=playlist&amp;list=КОД_КАНАЛА</code></li>
  <li>Получаем что-то вроде</li>
</ol>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">loading=</span><span class="s">"lazy"</span> <span class="na">class=</span><span class="s">"video__last-video"</span> <span class="na">width=</span><span class="s">"350"</span> <span class="na">height=</span><span class="s">"250"</span> <span class="na">title=</span><span class="s">"Последний видосик на канале"</span> <span class="na">allow=</span><span class="s">"accelerometer; encrypted-media; gyroscope; picture-in-picture"</span> <span class="na">allowfullscreen</span> <span class="na">src=</span><span class="s">"https://www.youtube.com/embed?listType=playlist&amp;list=UUzS4sE_0ltfSz6qx_FUCTdA"</span><span class="nt">&gt;&lt;/iframe&gt;</span>
</code></pre></div></div>

<p>В итоге у вас получится плейлист всех видео с канала, но показан будет именно последний. Я использую этот подход на своем <a href="https://vallek.github.io/">портфолио</a>.</p>

<p>Из минусов: невозможность использования <a href="/webdevtips/ru/youtube-lazy-load">lazy load методов по клику</a>. Впрочем, если вам нужно только одно видео на странице, то это не самая большая проблема. Стоит указать <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#loading">нативный lazy</a>, который не загрузит iframe, пока он не на экране.</p>]]></content><author><name></name></author><category term="html" /><category term="iframe" /><category term="youtube" /><summary type="html"><![CDATA[ВНИМАНИЕ upd от 21.02.2024: способ перестал работать в Хроме начиная с версии 121-122 возможно из-за изменений в политике куки. Как вариант вы можете создать плейлист со всеми видео вручную и использовать его. При этом каждый раз нужно будет добавлять в него новое видео.]]></summary></entry><entry xml:lang="en"><title type="html">Embeded Youtube Lazy Loading on lick</title><link href="https://vallek.github.io/webdevtips/en/youtube-lazy-load" rel="alternate" type="text/html" title="Embeded Youtube Lazy Loading on lick" /><published>2024-02-05T03:00:00+03:00</published><updated>2024-02-05T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/youtube-lazy-load</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/youtube-lazy-load"><![CDATA[<p>There are a lot of different youtube video lazy loading methods. Most of them are using js libraries or at least some js code.</p>

<p>But you can make it with just html trick)</p>

<p>It looks life this</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">class=</span><span class="s">"video__last-video"</span> <span class="na">width=</span><span class="s">"350"</span> <span class="na">height=</span><span class="s">"250"</span> <span class="na">src=</span><span class="s">"https://www.youtube.com/embed/Ne_ls6OzRF0"</span> <span class="na">title=</span><span class="s">"Latest video on channel"</span> <span class="na">allow=</span><span class="s">"accelerometer; encrypted-media; gyroscope; picture-in-picture"</span> <span class="na">allowfullscreen</span> <span class="na">srcdoc=</span><span class="s">"&lt;title&gt;Latest video on channel&lt;/title&gt;&lt;style&gt;*{padding:0;margin:0;overflow:hidden;}html,body{height:100%}img,span{position:absolute;width:100%;top:0;bottom:0;margin:auto}span{height:1.5em;text-align:center;font:48px/1.5 sans-serif;color:white;text-shadow:0 0 0.5em black}a:focus-visible span{outline: 3px dashed rgb(255, 19, 255);outline-offset: -5px;}&lt;/style&gt;&lt;a href='https://www.youtube.com/embed/Ne_ls6OzRF0?autoplay=1'&gt;&lt;img src='https://i.ytimg.com/vi/Ne_ls6OzRF0/sddefault.jpg' alt=''&gt;&lt;span&gt;▶&lt;/span&gt;&lt;/a&gt;"</span><span class="nt">&gt;&lt;/iframe&gt;</span>
</code></pre></div></div>

<p>We are using <code class="language-plaintext highlighter-rouge">srcdoc</code> attribute, that lets you insert html content instead of src original contents. And if you put link there with original url it will load the video on click (or two).</p>

<p>You can also style lazy ui with <code class="language-plaintext highlighter-rouge">&lt;style&gt;</code> tag. Play button is just a simple unicode symbol.</p>

<p>And that’s the diy lazy load) This method will not do it for you if you need regularly change the video or put it in many pages. But it’s good enough for one video on a static page if you don’t want additional JS.</p>

<p>I used it on my site but I had to abandon lazy load for now cause I started to work on videos more actively and needed to <a href="/webdevtips/en/youtube-last-video">always show the latest one</a>.</p>

<p><a href="https://github.com/paulirish/lite-youtube-embed">lite-youtube-embed</a> is more advanced method using custom elements from a Chrome dev. You can’t use playlist with it either.</p>

<p>I googled couple options for playlists but they are not working like I want or at all. If I will find or come up with a way I will update this post. Or you can tell about it in comments)</p>]]></content><author><name></name></author><category term="youtube" /><category term="lazy load" /><category term="iframe" /><category term="html" /><summary type="html"><![CDATA[There are a lot of different youtube video lazy loading methods. Most of them are using js libraries or at least some js code.]]></summary></entry><entry xml:lang="en"><title type="html">Embed youtube channel latest video without API</title><link href="https://vallek.github.io/webdevtips/en/youtube-last-video" rel="alternate" type="text/html" title="Embed youtube channel latest video without API" /><published>2024-02-05T03:00:00+03:00</published><updated>2024-02-05T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/youtube-last-video</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/youtube-last-video"><![CDATA[<p><strong>21.02.2024 UPD</strong>: this method is not working for me any more in Chrome 121-122. Maybe cause cookie policy changes. As an option you can create playlist with all videos manually. Of course you’ll have to add new video to it every time.</p>

<p>To embed latest youtube channel video without api:</p>

<ol>
  <li>Learn your channel id. Open youtube (not studio, just website) &gt; click your avatar in the corner &gt; Settings &gt; Advanced settings. Find your channel id. This is also last part of your channel url if you not using unique name.</li>
  <li>First letter will be <code class="language-plaintext highlighter-rouge">U</code>, and the seconds something else. You have to change that second letter to <code class="language-plaintext highlighter-rouge">U</code> as well. So it would start with <code class="language-plaintext highlighter-rouge">UU</code>. For example if it was <code class="language-plaintext highlighter-rouge">UCzS4sE_0ltfSz6qx_FUCTdA</code>, cahnge it to <code class="language-plaintext highlighter-rouge">UUzS4sE_0ltfSz6qx_FUCTdA</code>.</li>
  <li>Put <code class="language-plaintext highlighter-rouge">https://www.youtube.com/embed?listType=playlist&amp;list=RESULT_ID</code> into iframe src</li>
  <li>The whole thing:</li>
</ol>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;iframe</span> <span class="na">loading=</span><span class="s">"lazy"</span> <span class="na">class=</span><span class="s">"video__last-video"</span> <span class="na">width=</span><span class="s">"350"</span> <span class="na">height=</span><span class="s">"250"</span> <span class="na">title=</span><span class="s">"Latest video"</span> <span class="na">allow=</span><span class="s">"accelerometer; encrypted-media; gyroscope; picture-in-picture"</span> <span class="na">allowfullscreen</span> <span class="na">src=</span><span class="s">"https://www.youtube.com/embed?listType=playlist&amp;list=UUzS4sE_0ltfSz6qx_FUCTdA"</span><span class="nt">&gt;&lt;/iframe&gt;</span>
</code></pre></div></div>
<p>It will embed a playlist with all published channel videos. But it will always show the last one. I use this on my <a href="https://vallek.github.io/">site</a>.</p>

<p>Cons: you can’t use <a href="/webdevtips/en/youtube-lazy-load">lazy load on click methods</a>. Which is ok if you have one video. You should use <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#loading">native lazy load</a> to at least only load iframe when it’s in viewport.</p>]]></content><author><name></name></author><category term="html" /><category term="iframe" /><category term="youtube" /><summary type="html"><![CDATA[21.02.2024 UPD: this method is not working for me any more in Chrome 121-122. Maybe cause cookie policy changes. As an option you can create playlist with all videos manually. Of course you’ll have to add new video to it every time.]]></summary></entry><entry xml:lang="en"><title type="html">White flashing with dark theme on page load</title><link href="https://vallek.github.io/webdevtips/en/dark-theme-flashing" rel="alternate" type="text/html" title="White flashing with dark theme on page load" /><published>2024-01-07T03:00:00+03:00</published><updated>2024-01-07T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/dark-theme-flashing</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/dark-theme-flashing"><![CDATA[<p>Using <a href="/webdevtips/en/dark-theme-detect">this method</a> to make a dark theme your site users could see a white flashing of default page background before CSS and JS are loaded. It could also happened with other methods.</p>

<p>You can fix it by moving part of JS that detect saved and preferred theme to the very start of the <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> element in html. Like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;body&gt;
&lt;script&gt;
	const thisPage = document.querySelector('.page');

	// Check if user set dark theme before
	if (localStorage.getItem('this-site-theme') == 'dark') {
		thisPage.classList.add('dark');
	}
	// Check if user prefers dark theme
	if (window.matchMedia &amp;&amp; window.matchMedia('(prefers-color-scheme: dark)').matches) {
		thisPage.classList.add('dark');
	}
&lt;/script&gt;
</code></pre></div></div>

<p>Leave the rest in separate JS file:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'use strict';

const page = document.querySelector('.page');
const lightThemeLink = document.querySelector('.themes__link_light');
const darkThemeLink = document.querySelector('.themes__link_dark');

// Check theme preference switch real time
window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event =&gt; {
	const newColorScheme = event.matches ? 'dark' : 'light';
	if (newColorScheme == 'dark') {
		page.classList.add('dark');
	}
	if (newColorScheme == 'light') {
		page.classList.remove('dark');
	} 
});

// Turn dark theme on
darkThemeLink.addEventListener('click', setDark);
function setDark(el) {
	el.preventDefault();
	page.classList.add('dark');
	localStorage.setItem('this-site-theme', 'dark');
}

// Turn light theme on
lightThemeLink.addEventListener('click', setLight);
function setLight(el) {
	el.preventDefault();
	page.classList.remove('dark');
		localStorage.setItem('this-site-theme', 'light');
}
</code></pre></div></div>

<p>Notice that both scripts use <code class="language-plaintext highlighter-rouge">body</code> node but with different variables. Not the most elegant solution but it keeps scripts independent. Just don’t do this with 500 nodes)</p>]]></content><author><name></name></author><category term="css" /><category term="dark theme" /><category term="javascript" /><category term="accessibility" /><summary type="html"><![CDATA[Using this method to make a dark theme your site users could see a white flashing of default page background before CSS and JS are loaded. It could also happened with other methods.]]></summary></entry><entry xml:lang="ru"><title type="html">Темная тема мигает белым при загрузке страницы</title><link href="https://vallek.github.io/webdevtips/ru/dark-theme-flashing" rel="alternate" type="text/html" title="Темная тема мигает белым при загрузке страницы" /><published>2024-01-07T03:00:00+03:00</published><updated>2024-01-07T03:00:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/dark-theme-flashing</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/dark-theme-flashing"><![CDATA[<p><strong>upd:</strong> я сделал <a href="https://youtu.be/VWxIhcdQcjc">видео гайд по созданию темной темы</a> и исправлению проблем, которые могут возникнуть</p>

<p>При использовании темной темы по <a href="/webdevtips/ru/dark-theme-detect">этому рецепту</a> пользователь может видеть “вспышку” белого цвета. Это нестилизованная страница с белым фоном по умолчанию, которую видно, до загрузки CSS и JS.</p>

<p>Это возможно исправить, если перенести часть JS определяющую сохраненную и предпочитаемую тему в <strong>самое начало</strong> тело страницы, то есть внутрь <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> в html.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;body&gt;
&lt;script&gt;
	const thisPage = document.querySelector('.page');

	// Check if user set dark theme before
	if (localStorage.getItem('this-site-theme') == 'dark') {
		thisPage.classList.add('dark');
	}
	// Check if user prefers dark theme
	if (window.matchMedia &amp;&amp; window.matchMedia('(prefers-color-scheme: dark)').matches) {
		thisPage.classList.add('dark');
	}
&lt;/script&gt;
</code></pre></div></div>

<p>В отдельном JS файле останется все остальное:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'use strict';

const page = document.querySelector('.page');
const lightThemeLink = document.querySelector('.themes__link_light');
const darkThemeLink = document.querySelector('.themes__link_dark');

// Check theme preference switch real time
window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event =&gt; {
	const newColorScheme = event.matches ? 'dark' : 'light';
	if (newColorScheme == 'dark') {
		page.classList.add('dark');
	}
	if (newColorScheme == 'light') {
		page.classList.remove('dark');
	} 
});

// Turn dark theme on
darkThemeLink.addEventListener('click', setDark);
function setDark(el) {
	el.preventDefault();
	page.classList.add('dark');
	localStorage.setItem('this-site-theme', 'dark');
}

// Turn light theme on
lightThemeLink.addEventListener('click', setLight);
function setLight(el) {
	el.preventDefault();
	page.classList.remove('dark');
		localStorage.setItem('this-site-theme', 'light');
}
</code></pre></div></div>

<p>Обратите внимание, что и там и там используется узел <code class="language-plaintext highlighter-rouge">body</code>, но с разными именами переменных. Не самый изящный способ, но позволяющий не думать о связанности кода. В данном случае влияние на скорость нулевое, но экстраполировать на 500 узлов, конечно, не стоит)</p>]]></content><author><name></name></author><category term="css" /><category term="dark theme" /><category term="javascript" /><category term="accessibility" /><summary type="html"><![CDATA[upd: я сделал видео гайд по созданию темной темы и исправлению проблем, которые могут возникнуть]]></summary></entry></feed>