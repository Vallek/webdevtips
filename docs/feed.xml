<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://vallek.github.io/webdevtips/feed.xml" rel="self" type="application/atom+xml" /><link href="https://vallek.github.io/webdevtips/" rel="alternate" type="text/html" /><updated>2023-07-10T11:16:39+03:00</updated><id>https://vallek.github.io/webdevtips/feed.xml</id><title type="html">Web Dev Tips</title><subtitle>База знаний по фронтенду, веб-разработке и настройке пк</subtitle><entry xml:lang="en"><title type="html">How to remove localhost from jekyll-feed</title><link href="https://vallek.github.io/webdevtips/en/localhost-in-feed" rel="alternate" type="text/html" title="How to remove localhost from jekyll-feed" /><published>2023-07-10T10:33:00+03:00</published><updated>2023-07-10T10:33:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/localhost-in-feed</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/localhost-in-feed"><![CDATA[<p><code class="language-plaintext highlighter-rouge">jekyll serve</code> might put <code class="language-plaintext highlighter-rouge">localhost</code> in feed urls. One way to fix it is just use <code class="language-plaintext highlighter-rouge">jekyll build</code> for production after local server test. But that’s not really a fix.</p>

<p>But you can manually edit jekyll-feed gem and put your url there.</p>

<p>Find Ruby: <code class="language-plaintext highlighter-rouge">where ruby</code></p>

<p>Gems are at: <code class="language-plaintext highlighter-rouge">Ruby\lib\ruby\gems\version\gems\</code></p>

<p>Open <code class="language-plaintext highlighter-rouge">jekyll-feed-0.17.0\lib\jekyll-feed\feed.xml</code></p>

<p>This is a template for your feed xml file. You have to find instances of <code class="language-plaintext highlighter-rouge">http://0.0.0.0:4000/webdevtips/en/localhost-in-feed</code> and `` and replace them with <code class="language-plaintext highlighter-rouge">https://username.github.io/example/en/localhost-in-feed</code> and <code class="language-plaintext highlighter-rouge">https://username.github.io/example</code>.</p>

<p>Make sure that you didn’t mix up posts and pages.</p>]]></content><author><name></name></author><category term="jekyll" /><summary type="html"><![CDATA[jekyll serve might put localhost in feed urls. One way to fix it is just use jekyll build for production after local server test. But that’s not really a fix.]]></summary></entry><entry xml:lang="ru"><title type="html">Как убрать localhost из jekyll-feed</title><link href="https://vallek.github.io/webdevtips/ru/localhost-in-feed" rel="alternate" type="text/html" title="Как убрать localhost из jekyll-feed" /><published>2023-07-10T10:33:00+03:00</published><updated>2023-07-10T10:33:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/localhost-in-feed</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/localhost-in-feed"><![CDATA[<p><code class="language-plaintext highlighter-rouge">jekyll serve</code> может заменять url вашего сайта в фиде на <code class="language-plaintext highlighter-rouge">localhost</code>. Это можно исправить командой <code class="language-plaintext highlighter-rouge">jekyll build</code>, каждный раз отдельно выполняя сборку для продакшена. Но это не реальное решение проблемы.</p>

<p>Вместо этого можно вручную отредактировать расширение jekyll-feed и добавить туда ваш адрес.</p>

<p>Найдите папку с Ruby: <code class="language-plaintext highlighter-rouge">where ruby</code></p>

<p>Путь к гемам: <code class="language-plaintext highlighter-rouge">Ruby\lib\ruby\gems\version\gems\</code></p>

<p>Откройте файл <code class="language-plaintext highlighter-rouge">jekyll-feed-0.17.0\lib\jekyll-feed\feed.xml</code></p>

<p>Это шаблон для rss фида. Вам нужно найти все места с <code class="language-plaintext highlighter-rouge">http://0.0.0.0:4000/webdevtips/ru/localhost-in-feed</code> и `` и заменить их на <code class="language-plaintext highlighter-rouge">https://username.github.io/example/ru/localhost-in-feed</code> и <code class="language-plaintext highlighter-rouge">https://username.github.io/example</code>.</p>

<p>Не перепутайте посты со страницами.</p>]]></content><author><name></name></author><category term="jekyll" /><summary type="html"><![CDATA[jekyll serve может заменять url вашего сайта в фиде на localhost. Это можно исправить командой jekyll build, каждный раз отдельно выполняя сборку для продакшена. Но это не реальное решение проблемы.]]></summary></entry><entry xml:lang="en"><title type="html">How to set tags pages title for jekyll-tagging</title><link href="https://vallek.github.io/webdevtips/en/jekyll-tagging-title" rel="alternate" type="text/html" title="How to set tags pages title for jekyll-tagging" /><published>2023-07-10T09:54:00+03:00</published><updated>2023-07-10T09:54:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/jekyll-tagging-title</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/jekyll-tagging-title"><![CDATA[<p>Find Ruby: <code class="language-plaintext highlighter-rouge">where ruby</code></p>

<p>Gems are at: <code class="language-plaintext highlighter-rouge">Ruby\lib\ruby\gems\version\gems\</code></p>

<p>Open <code class="language-plaintext highlighter-rouge">jekyll-tagging-1.1.0\lib\jekyll\tagging.rb</code></p>

<p>Find</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>data = { 'layout' =&gt; layout, 'posts' =&gt; posts.sort.reverse!, 'tag' =&gt; tag }
</code></pre></div></div>

<p>and change it to something like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>data = { 'layout' =&gt; layout, 'posts' =&gt; posts.sort.reverse!, 'tag' =&gt; tag, 'title' =&gt; 'Posts about' + ' ' + tag }
</code></pre></div></div>

<p>You can add or change other page setting like this. For example I needed to remove lang value for multilang site and did it like this: <code class="language-plaintext highlighter-rouge">'lang' =&gt; ''</code>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="ruby" /><summary type="html"><![CDATA[Find Ruby: where ruby]]></summary></entry><entry xml:lang="ru"><title type="html">Как задать title страницы тегов при использовании jekyll-tagging</title><link href="https://vallek.github.io/webdevtips/ru/jekyll-tagging-title" rel="alternate" type="text/html" title="Как задать title страницы тегов при использовании jekyll-tagging" /><published>2023-07-10T09:54:00+03:00</published><updated>2023-07-10T09:54:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/jekyll-tagging-title</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/jekyll-tagging-title"><![CDATA[<p>Если вы используете расширение jekyll-tagging дял Jekyll, то могли заметить, что на страницах с тегами нет заголовка. Это можно исправить, отредактировав само расширение, то есть ruby gem.</p>

<p>Найдите папку с Ruby: <code class="language-plaintext highlighter-rouge">where ruby</code></p>

<p>Путь к гемам: <code class="language-plaintext highlighter-rouge">Ruby\lib\ruby\gems\version\gems\</code></p>

<p>Откройте файл <code class="language-plaintext highlighter-rouge">jekyll-tagging-1.1.0\lib\jekyll\tagging.rb</code></p>

<p>Найдите</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>data = { 'layout' =&gt; layout, 'posts' =&gt; posts.sort.reverse!, 'tag' =&gt; tag }
</code></pre></div></div>

<p>И поменяйте на что-то вроде:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>data = { 'layout' =&gt; layout, 'posts' =&gt; posts.sort.reverse!, 'tag' =&gt; tag, 'title' =&gt; 'Posts about' + ' ' + tag }
</code></pre></div></div>

<p>Таким же образом вы можете добавить или изменить здесь другие параметры страницы. Например, для мультиязычной версии сайта мне нужно было убрать значение lang у страниц с тегами. И я добавил <code class="language-plaintext highlighter-rouge">'lang' =&gt; ''</code>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="ruby" /><summary type="html"><![CDATA[Если вы используете расширение jekyll-tagging дял Jekyll, то могли заметить, что на страницах с тегами нет заголовка. Это можно исправить, отредактировав само расширение, то есть ruby gem.]]></summary></entry><entry xml:lang="ru"><title type="html">Если map() с template literal выдает лишние символы</title><link href="https://vallek.github.io/webdevtips/ru/map-symbols-join" rel="alternate" type="text/html" title="Если map() с template literal выдает лишние символы" /><published>2023-06-26T18:31:00+03:00</published><updated>2023-06-26T18:31:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/map-symbols-join</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/map-symbols-join"><![CDATA[<p>Если вы используете метод <code class="language-plaintext highlighter-rouge">map()</code> и в результате выполнения функции с template литералом внутри у вас остаются лишние символы из массива (запятые, скобки), то достаточно применить после <code class="language-plaintext highlighter-rouge">map()</code> метод <code class="language-plaintext highlighter-rouge">join()</code>.</p>

<p>Вот так:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>let variable = array.map(el =&gt; {
		// code with template literal
		return result;
	}).join('');
</code></pre></div></div>]]></content><author><name></name></author><category term="javascript" /><summary type="html"><![CDATA[Если вы используете метод map() и в результате выполнения функции с template литералом внутри у вас остаются лишние символы из массива (запятые, скобки), то достаточно применить после map() метод join().]]></summary></entry><entry xml:lang="en"><title type="html">If map() with template literal generate extra characters</title><link href="https://vallek.github.io/webdevtips/en/map-symbols-join" rel="alternate" type="text/html" title="If map() with template literal generate extra characters" /><published>2023-06-26T18:31:00+03:00</published><updated>2023-06-26T18:31:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/map-symbols-join</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/map-symbols-join"><![CDATA[<p>If you use the <code class="language-plaintext highlighter-rouge">map()</code> method and as a result of executing a function with a template literal you have extra characters from the array (commas, brackets), then apply <code class="language-plaintext highlighter-rouge">join()</code> method after <code class="language-plaintext highlighter-rouge">map()</code>.</p>

<p>Like this:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>let variable = array.map(el =&gt; {
		// code with template literal
		return result;
	}).join('');
</code></pre></div></div>]]></content><author><name></name></author><category term="javascript" /><summary type="html"><![CDATA[If you use the map() method and as a result of executing a function with a template literal you have extra characters from the array (commas, brackets), then apply join() method after map().]]></summary></entry><entry xml:lang="en"><title type="html">How to build static page with Node.js and Github Actions</title><link href="https://vallek.github.io/webdevtips/en/build-static-node-github-actions" rel="alternate" type="text/html" title="How to build static page with Node.js and Github Actions" /><published>2023-06-26T10:38:00+03:00</published><updated>2023-06-26T10:38:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/build-static-node-github-actions</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/build-static-node-github-actions"><![CDATA[<h2 id="why">Why</h2>
<p>If you need to build on a timer (once a day, for example) one static page with a complex template with data from API that you do not want to load, then this method can help you. I used it for <a href="https://vallek.github.io/animatable-css/">list of animatable CSS properties</a>. In all other cases, it may be better to choose a normal backend server)</p>

<h2 id="how-to">How to</h2>
<p>First of all create a github token. Go to account settings &gt; developer settings &gt; Personal access tokens. I chose classic. Set name and expiration. Save it somewhere.</p>

<p>In remote repo on github:</p>

<ol>
  <li>Create production folder. I use <code class="language-plaintext highlighter-rouge">dist</code> in this example</li>
  <li>Create gh-pages branch</li>
  <li>In repo settings &gt; Actions &gt; General &gt; Workflow permissions. Set to <code class="language-plaintext highlighter-rouge">Read AND WRITE</code>.</li>
  <li>Create Github Action</li>
</ol>

<p>Action code:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>name: Build and Deploy to GitHub pages
on:
  schedule:
    - cron: '0 9 * * *'
  push:
    paths-ignore:
      - 'dist/index.html'
      - 'README.md'
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Generate static files
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    - run: npm ci
    - run: npm run build

    - name: Init new repo in dist folder and commit generated files
      run: |
        cd dist/
        git init
        git add -A
        git config --local user.email "email@email.com"
        git config --local user.name "username"
        git commit -m 'deploy'
        git config --global --add safe.directory /github/workspace
        
    - name: Force push to destination branch
      uses: ad-m/github-push-action@master
      with:
        github_token: $
        branch: gh-pages
        force: true
        directory: dist
</code></pre></div></div>
<p><strong>IMPORTANT NOTES ABOUT ACTION</strong>:</p>
<ol>
  <li>Make sure to push all node files (node_modules and so on)</li>
  <li>BUT DO NOT PUSH static index.html. Let github create it. Add it to .gitignore</li>
  <li><code class="language-plaintext highlighter-rouge">actions/checkout@v2</code> - only worked with <strong>v2</strong> for me</li>
  <li>Make sure <code class="language-plaintext highlighter-rouge">npm run build</code> runs the right js file. Set in <code class="language-plaintext highlighter-rouge">package.json</code> in <code class="language-plaintext highlighter-rouge">build</code>. Mine is <code class="language-plaintext highlighter-rouge">node index.js</code>.</li>
  <li>Will not work without <code class="language-plaintext highlighter-rouge">git config --global --add safe.directory /github/workspace</code>. Before disabling, make sure you understand this security measure, and <a href="https://github.com/git/git/commit/8959555cee7ec045958f9b6dd62e541affb7e7d9">why it exists</a>. You should not do this if your repositories are stored on a shared drive. See <a href="https://stackoverflow.com/a/71904131/9749171">this answer</a>.</li>
  <li>Make sure <code class="language-plaintext highlighter-rouge">cd dist/</code> and <code class="language-plaintext highlighter-rouge">directory: dist</code> have the right path for your prod folder</li>
  <li>Make sure your branch main name is right</li>
  <li>I run build on push changes (obviously) but also on timer once a day. This is what <code class="language-plaintext highlighter-rouge">schedule</code> is for. It’s in <a href="https://crontab.guru/#0_24_*_*_*">cron format</a> and UTC time.</li>
  <li>Original version had <code class="language-plaintext highlighter-rouge">user.email "action@github.com"</code> and <code class="language-plaintext highlighter-rouge">user.name "GitHub Action"</code> to not flood your own commit history. If build is not working try to put your own user data here.</li>
  <li><code class="language-plaintext highlighter-rouge">paths-ignore</code> allows you to not run build on pushing files when it’s not needed.</li>
</ol>

<p>Note that my action is different from the source.</p>]]></content><author><name></name></author><category term="github" /><category term="nodejs" /><summary type="html"><![CDATA[Why If you need to build on a timer (once a day, for example) one static page with a complex template with data from API that you do not want to load, then this method can help you. I used it for list of animatable CSS properties. In all other cases, it may be better to choose a normal backend server)]]></summary></entry><entry xml:lang="ru"><title type="html">Как генерировать статичный html файл на Node.js и Github Actions</title><link href="https://vallek.github.io/webdevtips/ru/build-static-node-github-actions" rel="alternate" type="text/html" title="Как генерировать статичный html файл на Node.js и Github Actions" /><published>2023-06-26T10:38:00+03:00</published><updated>2023-06-26T10:38:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/build-static-node-github-actions</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/build-static-node-github-actions"><![CDATA[<h2 id="зачем-это-нужно">Зачем это нужно</h2>
<p>Если вам нужно собирать по таймеру (раз в день например) одну статичную страницу со сложным шаблоном из данных с API, который вы не хотите нагружать, то это способ может вам помочь. Я использовал его для <a href="https://vallek.github.io/animatable-css/">списка анимируемых CSS свойств</a>. Во всех остальных случаях возможно лучше выбрать нормальный бэкэнд сервер)</p>

<h2 id="инструкция">Инструкция</h2>
<p>Прежде всего создайте github token. Откройте настройки аккаунта (не репозитория) &gt; developer settings &gt; Personal access tokens. Я выбрал классический. Установите имя и дату окончания. Сохраните токен где-то у себя (как пароль).</p>

<p>Для репозитория на гитхабе:</p>

<ol>
  <li>Создайте папку для продакшена. Я использую ‘dist’ в этом примере</li>
  <li>Создайте ветку gh-pages</li>
  <li>В настройках репозитория &gt; Actions &gt; General &gt; Workflow permissions. Выберете <code class="language-plaintext highlighter-rouge">Read AND WRITE</code>.</li>
  <li>Создайте Github Action</li>
</ol>

<p>Код экшена:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>name: Build and Deploy to GitHub pages
on:
  schedule:
    - cron: '0 9 * * *'
  push:
    paths-ignore:
      - 'dist/index.html'
      - 'README.md'
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Generate static files
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    - run: npm ci
    - run: npm run build

    - name: Init new repo in dist folder and commit generated files
      run: |
        cd dist/
        git init
        git add -A
        git config --local user.email "email@email.com"
        git config --local user.name "username"
        git commit -m 'deploy'
        git config --global --add safe.directory /github/workspace
        
    - name: Force push to destination branch
      uses: ad-m/github-push-action@master
      with:
        github_token: $
        branch: gh-pages
        force: true
        directory: dist
</code></pre></div></div>
<p><strong>ВАЖНЫЕ ЗАМЕЧАНИЯ</strong>:</p>
<ol>
  <li>Убедитесь, что вы загрузили все файлы ноды (node_modules и так далее).</li>
  <li>НО НЕ пуште статический index.html. Пусть github создает его сам. Добавьте его в .gitignore</li>
  <li><code class="language-plaintext highlighter-rouge">actions/checkout@v2</code> - у меня работало только с <strong>v2</strong></li>
  <li>Убедитесь, что “npm run build” запускает правильный js-файл. Задайте в <code class="language-plaintext highlighter-rouge">package.json</code> в <code class="language-plaintext highlighter-rouge">build</code>. Мой - это <code class="language-plaintext highlighter-rouge">node index.js</code>.</li>
  <li>Не будет работать без строчки <code class="language-plaintext highlighter-rouge">git config --global --add safe.directory /github/workspace</code>. Перед отключением убедитесь, что вы понимаете эту меру безопасности и <a href="https://github.com/git/git/commit/8959555cee7ec045958f9b6dd62e541affb7e7d9">почему она существует</a>. Подробности в <a href="https://stackoverflow.com/a/71904131/9749171">этом ответе</a>.</li>
  <li>Убедитесь, что <code class="language-plaintext highlighter-rouge">cd dist/</code> и <code class="language-plaintext highlighter-rouge">directory: dist</code> указывают правильный путь к вашей папке прода</li>
  <li>Убедитесь, что название вашей главной ветки указано правильно</li>
  <li>Я запускаю сборку по  пушу изменений (очевидно), но также по таймеру один раз в день. Именно для этого существует <code class="language-plaintext highlighter-rouge">schedule</code>. Уазывается в формате <a href="https://crontab.guru/#0_24_ *_*_*">cron</a> и универсальному UTC времени.</li>
  <li>В оригинальной версии в качестве юзера указан <code class="language-plaintext highlighter-rouge">user.email "action@github.com"</code> и <code class="language-plaintext highlighter-rouge">user.name "GitHub Action"</code>. Это бот, который может коммитить вместо вас, чтобы не зафлудить вашу собственную историю коммитов. Если сборка не работает попробуйте поменять на свои данные.</li>
  <li><code class="language-plaintext highlighter-rouge">paths-ignore</code> позволяет вам не запускать сборку при пуше файлов, когда это не нужно.</li>
</ol>

<p>Обратите внимание, что мой action отличается от источника.</p>]]></content><author><name></name></author><category term="github" /><category term="nodejs" /><summary type="html"><![CDATA[Зачем это нужно Если вам нужно собирать по таймеру (раз в день например) одну статичную страницу со сложным шаблоном из данных с API, который вы не хотите нагружать, то это способ может вам помочь. Я использовал его для списка анимируемых CSS свойств. Во всех остальных случаях возможно лучше выбрать нормальный бэкэнд сервер)]]></summary></entry><entry xml:lang="en"><title type="html">How to clone repo in any folder</title><link href="https://vallek.github.io/webdevtips/en/git-clone-in-folder" rel="alternate" type="text/html" title="How to clone repo in any folder" /><published>2023-06-17T16:50:00+03:00</published><updated>2023-06-17T16:50:00+03:00</updated><id>https://vallek.github.io/webdevtips/en/git-clone-in-folder</id><content type="html" xml:base="https://vallek.github.io/webdevtips/en/git-clone-in-folder"><![CDATA[<p>From any place:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/user/repo-name path/folder-name
</code></pre></div></div>
<p>Repo folder name will become <code class="language-plaintext highlighter-rouge">folder-name</code> instead of repo name (default behavior).</p>

<p>In active folder (right here):</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/user/repo-name .
</code></pre></div></div>

<p>In the source, git address is written differently, but the usual url works for me.</p>]]></content><author><name></name></author><category term="git" /><summary type="html"><![CDATA[From any place: git clone https://github.com/user/repo-name path/folder-name Repo folder name will become folder-name instead of repo name (default behavior).]]></summary></entry><entry xml:lang="ru"><title type="html">Как клонировать гит репозиторий в любую папку</title><link href="https://vallek.github.io/webdevtips/ru/git-clone-in-folder" rel="alternate" type="text/html" title="Как клонировать гит репозиторий в любую папку" /><published>2023-06-17T16:50:00+03:00</published><updated>2023-06-17T16:50:00+03:00</updated><id>https://vallek.github.io/webdevtips/ru/git-clone-in-folder</id><content type="html" xml:base="https://vallek.github.io/webdevtips/ru/git-clone-in-folder"><![CDATA[<p>Из любого места:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/user/repo-name path/folder-name
</code></pre></div></div>
<p>Имя папки репозитория станет <code class="language-plaintext highlighter-rouge">folder-name</code> вместо имени репозитория (как это происходит при клонировании по умолчанию).</p>

<p>В активную папку (то есть прямо сюда):</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/user/repo-name .
</code></pre></div></div>

<p>В источнике гит адрес пишут по другому, но у меня работает обычный url.</p>]]></content><author><name></name></author><category term="git" /><summary type="html"><![CDATA[Из любого места: git clone https://github.com/user/repo-name path/folder-name Имя папки репозитория станет folder-name вместо имени репозитория (как это происходит при клонировании по умолчанию).]]></summary></entry></feed>